.report_view

  %h1= @opts[:title] || @opts[:key]
  %h3= (fancy_timerange(@interval) * " &nbsp;&mdash;&nbsp; ")

  %ul.ui_tabs.tabs
    %li.active{"data-tab" => "Overview"}
      %a{:href => "#"} Overview
    %li{"data-tab" => "Punchcards"}
      %a{:href => "#"} Punchcards
    / %li{"data-tab" => "Realtime"}
    /   %a{:href => "#"} Realtime
    / %li{"data-tab" => "Export"}
    /   %a{:href => "#"} Export


  .widget_timeseries

  .resizable(data-width="65" style="border-right:1px solid #ddd;")
    .headbar.small Series Values

    %table
      %tr
        %th
        -@series.each do |series, sopts|
          %th
            %span.swatch(style="background:#{sopts[:color]}; display:inline-block;")
            %span= series  
      %tr
        %td Today
        -@series.each do |series, sopts|
          %td= 0
      %tr
        %td Today
        -@series.each do |series, sopts|
          %td= 0



  .resizable(data-width="35")
    .headbar.small Series Weights



:gaugejs

  FnordMetric.ui.resizable('.report_view');
  FnordMetric.util.updateNumbers('.report_view', 4);

  FnordMetric.widgets.timeseriesWidget().render({
    title: "#{key_nouns.last}",
    elem: $('.widget_timeseries'),
    height: 420,
    default_style: 'stack',
    series_resolutions: #{@zooms.to_json},
    timespan: #{@interval.size},
    series: [#{@series.map{ |k,s| 
      dat = s[:data].map{ |k,d| "data#{k}: #{d.to_json(&@calculate_proc)}" }
      "{ name: #{k.to_json}, color: '#{s[:color]}', #{dat * ","} }" 
    } * ","}]
  });
